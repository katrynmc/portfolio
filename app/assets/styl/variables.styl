// CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
// OOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOO
// LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL
// OOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOO
// RRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRR

$transparent-white = rgba(255, 255, 255, 0.40)

$light-grey = #f9f9f9
$light-med-grey = #b3bbc7
$med-grey = #b3bbc7
$darkest-grey = #616a77
$black = #444343;

$blue = #96c4f7


$primary-color-0 = $blue
$primary-color-1 = darken($primary-color-0, 10%)

$secondary-color-0 = $blue
$secondary-color-1 = darken($secondary-color-0, 10%)

// TTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTT
// YYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYY
// PPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPP
// EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE

$serif = 'VT323', monospace
$sans-serif = 'Open Sans', sans-serif

$serif-letterspacing = 1px
$sans-serif-letterspacing = 2px

$type-xx-small = 0.9rem
$type-x-small = 1rem
$type-small = 1.25rem
$type-medium = 1.5rem
$type-large = 2rem
$type-x-large = 3rem
$type-xx-large = 4.3rem

// SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
// PPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPP
// AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
// CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
// EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE

$tiny-space = 5px
$small-space = 25px
$medium-space = 30px
$large-space = 50px
$xlarge-space = 90px

$margin-left = $medium-space
$margin-right = $medium-space

$main-content-width = 50%
$main-content-margin-right = $medium-space
$main-content-margin-top = $small-space

$sidebar-width = 30%

// Pixels (px)
// Use for: hairline borders and general elements when creating fixed-width designs; values for CSS shadow displacement. Avoid using in @media breakpoints, as doing so reinforces the tendency to create for device dimensions, rather than where your design needs to adapt. Use rem or em instead.
// Don’t use for: typography. (Exception: setting a base font-size in a CSS reset).
// Percentage (%)
// Use for: making responsive images and containers; setting height on the body in some cases.
// Don’t use for: typography. (Exception: font-size CSS reset.)
// em, ex
// Use for: typography, and elements related to typography (margins, for example), with the understanding that em and ex have a subtle “gotchas” when used in complex layouts. Consider using rem as an alternative.
// Points and picas
// Use for: print stylesheets.
// Don’t use for: anything else.
// rem
// Used as: a more robust and predictable alternative to em and ex, and employed for the same purposes, including @media query breakpoints.
// Don’t use: if you wish to support IE8 and earlier. Or, use the unit but include a fallback (by providing an alternate measurement in a more common unit before the rem measurement) or a polyfill.
// Viewport units (vh & vw)
// Use for: responsive typography; “perfect” responsive containers.
// Don’t use in: media queries, as the viewport will never attain a width of less than 100vw or a height less than 100vh: by definition, those numbers correspond to the current dimensions of the browser window, no matter how large or small the screen or device is. Be aware of the unit’s lack of support in IE8.
// Inches (in) and Centimeters (cm)
// Use with: print stylesheets, especially page margins
// Don’t use for: anything else.
// Character (ch)
// Use when: sizing and adjusting monospaced fonts. Be aware of browser support limitations.
// Grid (gd)
// Use for: experimental layouts; the unit is only supported in IE10+ at this moment. Polyfills are beginning to appear, however.
// Raw numbers
// While almost every CSS property requires that the measurement system be specified in the declaration, a few are best used with plain integer or floating-point values. In particular, line-height and border-image should be used with raw numbers.
